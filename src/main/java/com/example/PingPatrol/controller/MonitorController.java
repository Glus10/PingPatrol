package com.example.PingPatrol.controller;

import com.example.PingPatrol.model.Client;
import com.example.PingPatrol.model.MonitorDef; 
import com.example.PingPatrol.repository.ClientRepository;
import com.example.PingPatrol.repository.MonitorDefRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
 

@RestController                           // This means that this class is a Controller
@RequestMapping("/api")                   // This means URL's start with /api (after Application path)
public class MonitorController {

    @Autowired                             // This means to get the bean called clientRepository
    private ClientRepository clientRepo;    // Which is auto-generated by Spring, we will use it to handle the data

    @Autowired
    private MonitorDefRepository monitorRepo;

    @GetMapping("/clients")                 // This returns all the clients    
    public List<Client> getAllClients() {   // @GetMapping is a short form of @RequestMapping(method=GET)
        return clientRepo.findAll();        // This returns a JSON or XML with the clients
    }

    @PostMapping("/clients")                // This creates a new client
    public Client createClient(@RequestBody Client client) {  // @PostMapping is a short form of @RequestMapping(method=POST)
        return clientRepo.save(client);     // This saves the client in the database    
    }

    @GetMapping("/monitorDefs")                // This returns all the monitors    
    public List<MonitorDef> getAllMonitorDefs() {   // @GetMapping is a short form of @RequestMapping(method=GET)
        return monitorRepo.findAll();        // This returns a JSON or XML with the monitors
    }

    @PostMapping("/monitorDefs")                // This creates a new monitor
    public MonitorDef createMonitorDef(@RequestBody MonitorDef monitorDef) {  // @PostMapping is a short form of @RequestMapping(method=POST)
        return monitorRepo.save(monitorDef);     // This saves the monitor in the database    
    }



}
